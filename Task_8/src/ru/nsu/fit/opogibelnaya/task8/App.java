/*
 * This Java source file was generated by the Gradle 'init' task.
 */

package ru.nsu.fit.opogibelnaya.task8;

import static ru.nsu.fit.opogibelnaya.task8.Denominator.*;

import java.util.ArrayList;
import java.util.List;

public class App {

  private static List<Integer> createTasks(int nThreads, int nIterations) {
    int denominator = 1;
    List<Integer> taskList = new ArrayList<>(nThreads);

    if (nIterations % 2 == 0) {
      setK(1);
    } else {
      setK(-1);
    }
    setForOne(nIterations);

    for (int i = 0; i < nThreads; i++) {
      taskList.add(denominator);
      denominator = nextDenominator(denominator, 1);
    }

    return taskList;
  }

  public static void main(String[] args) {
    int nThreads = Integer.decode(args[0]);
    int nIterations = Integer.decode(args[1]);
    List<Integer> tasks = createTasks(nThreads, nIterations);
    List<Thread> threads = new ArrayList<>(nThreads);

    for (int i = 0; i < nThreads; i++) {
      threads.add(i, new MyThread(tasks.get(i), nIterations, nThreads));
    }
    for (Thread thread : threads) {
      thread.start();
    }

    Runtime.getRuntime().addShutdownHook(new Thread(() -> {
      for (Thread thread : threads) {
        thread.interrupt();
      }
      for (Thread thread : threads) {
        try {
          thread.join();
        } catch (InterruptedException e) {
          throw new RuntimeException(e);
        }
      }
      System.out.println(" My Pi = " + MyThread.getResSum() * 4);
      System.out.println("Lib Pi = " + Math.PI);
    }));
  }
}
